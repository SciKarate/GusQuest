<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "Start";
menu[1] = "Continue";
menu[2] = "Level Select";
menu[3] = "Load Saved Game";
menu[4] = "Options";
menu[5] = "Quit";

menuscript = scr_menu;
space = 52;
mpos = 0;
gpcooldown = -1;
xoffset = 16;
xspace = 40;
starttimer = -2;
continuing = false;
font = fnt_default;
gamepad_set_axis_deadzone(0, 0.75);
if(audio_is_playing(game_theme_pookatori)) audio_stop_sound(game_theme_pookatori);
if!(audio_is_playing(menu_theme_sillyfun))
{
    audio_sound_pitch(menu_theme_sillyfun, 1);
    audio_sound_gain(menu_theme_sillyfun, global.gamevolume, 0);
    audio_play_sound(menu_theme_sillyfun, 0, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_menu</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_player_getinput();

var move = 0;
//digital up/down
move -= max(keyboard_check_pressed(vk_up), gamepad_button_check_pressed(0, gp_padu), 0);
move += max(keyboard_check_pressed(vk_down), gamepad_button_check_pressed(0, gp_padd), 0);

//analog up/down
gp = gamepad_axis_value(0, gp_axislv)
if(gp != 0) &amp;&amp; (gpcooldown &lt; 0)
{
    if(gp &gt; 0) move += 1;
    if(gp &lt; 0) move -= 1;
    gpcooldown = 15; //frames of delay on gamepad
}
if(gpcooldown &gt; -1) gpcooldown -= 1;
if(gp == 0) gpcooldown = -1;
if (move != 0) &amp;&amp; (starttimer == -2) &amp;&amp; !(instance_exists(eff_fadeToBlack))
{
    mpos += move;
    if (mpos &lt; 0) mpos = array_length_1d(menu) - 1;
    if (mpos &gt; array_length_1d(menu) - 1) mpos = 0;
    audio_sound_pitch(snd_main, 3);
    audio_sound_gain(snd_main, global.gamevolume, 0);
    audio_play_sound(snd_main, 0, 0);
}
var push;
push = max(key_jump, keyboard_check_pressed(vk_enter), 0);
//quit button
if((key_quit != 0) || (gamepad_button_check_pressed(0, gp_face2))) &amp;&amp; (move == 0)
{
    mpos = array_length_1d(menu) - 1;
    push = 1;
}
if(push == 1) &amp;&amp; (starttimer == -2) &amp;&amp; !(instance_exists(eff_fadeToBlack))
{
    if(menu[mpos] != "Adjust Volume")
    {audio_sound_pitch(snd_main, 5);
    audio_sound_gain(snd_main, global.gamevolume, 0);
    audio_play_sound(snd_main, 0, 0);}
    script_execute(menuscript);
}
if(starttimer &gt; -2) scr_start_game();
if(continuing = true) scr_continue_game();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(font);
draw_set_color(c_black);

var m;
for (m = 0; m &lt; array_length_1d(menu); m += 1)
{
    if(m = 1) &amp;&amp; (global.unlocks[0] = false) draw_set_color(c_gray);
    else if(m == 2) &amp;&amp; (global.unlocks[0] = false) draw_set_color(c_gray);
    else if((m == 3) &amp;&amp; !(file_exists("Save.sav"))) draw_set_color(c_gray);
    else draw_set_color(c_black);
    draw_text(x + xspace, y + (m * space), string(menu[m]))
}

draw_sprite(sprite_index, 0, x + xoffset, y + mpos * space);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
