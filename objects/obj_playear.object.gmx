<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_standing_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//States
enum states
{
    normal,
    ladder,
    jumping,
    sliding,
    pickup,
    endlevel,
    paused,
    die
}
state = states.normal;
gamepad_set_axis_deadzone(0, 0.25);
//movement variables
hsp = 0;
vsp = 0;
hsp_carry = 0;
frctn = 0.2;
accelrate = .25;
movespeed = 3;
inwater = false;
slidetime = -1;
maxslide = 30;
//sprintspeed = 4.25;
sprintspeed = global.sprintspeed;
ogmovespeed = movespeed;
//sprite variables
depth = 0;
sprdir = 1;
//jump variables
jumpspeed = 4.5;
grav = 0.2;
currjumps = 0;
maxjumps = 2;
jumptimer = 0;
//sliding variables
slidefriction = 0.125;
walkedslide = 0;
slideframe = -1;
//shooting variables
can_shoot = global.can_shoot;
shoot_cooldown = -1;
shoot_frame = -1;
//pickup variables
grabbed_item = 0;
pickupframe = -1;
maxpickupframe = 0;
//dying variables
alive = true;
dying = -1;
if!(instance_exists(obj_gametheme)) {instance_create(x, y, obj_gametheme);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//switch states
switch(state)
{
    case states.normal: scr_player_normal(); break;
    case states.ladder: scr_player_ladder(); break;
    case states.jumping: scr_player_jumping(); break;
    case states.sliding: scr_player_sliding(); break;
    case states.pickup: scr_player_pickup(); break;
    case states.endlevel: scr_player_endlevel(); break;
    case states.die: scr_player_dying(); break;
    case states.paused: scr_player_paused(); break;
}
//decrement jumptimer
if(jumptimer &gt; 0) jumptimer -= 1;

//kill player if out of bounds
if alive = true &amp;&amp; dying &lt; 0
{
    //check if the player's x and y is within bounds of the room
    if!(obj_player.x &gt;= -16 and obj_player.x &lt;= room_width + 16 and
    obj_player.y &gt;= -32 and obj_player.y &lt;= room_height + 64)
    {
        alive = false;
        dying = 20;
    }
}

//if dying, die.
if (alive = false &amp;&amp; state != states.die &amp;&amp; obj_endcarrot.triggered = 0)
{
    dying = 30; //frames before normal death
    state = states.die;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//delete save/make new one
if (file_exists("Save.sav")) file_delete("Save.sav");
var SaveFile = file_text_open_write("Save.sav");

//instance variable
var SavedShooting = global.can_shoot;
var SavedSprinting = global.sprintspeed;

//write instance variable
file_text_write_real(SaveFile, SavedShooting);
file_text_write_real(SaveFile, SavedSprinting);

//write unlocks
var m;
for(m = 0; m &lt; array_length_1d(global.unlocks); m += 1)
{
    file_text_write_real(SaveFile, global.unlocks[m]);
}
file_text_close(SaveFile);

randomize();

/*
if(global.zone = "Grassy")
{
    xx = 0;
    yy = 0;
    not_placed = 0;
    not_placed_thresh = irandom_range(4, 16);
    while(yy &lt;= room_height)
    {
        while(xx &lt;= room_width)
        {
            if(not_placed &gt; not_placed_thresh) //&amp;&amp; (!place_meeting(xx, yy, par_all_walls))
            {
                i = irandom_range(3, 11)
                if(i &gt; 2) &amp;&amp; (i &lt; 6) {xz = 16 * (i - 3); yz = 16}
                if(i &gt; 5) &amp;&amp; (i &lt; 9) {xz = 16 * (i - 6); yz = 32}
                if(i &gt; 8) {xz = 16 * (i - 9); yz = 48}
                tile_add(tileset_sky, xz, yz, 16, 16, xx, yy, 99999);
                not_placed = 0;
                not_placed_thresh = irandom_range(4, 16);
            }
            else{not_placed += 1;}
            xx += 16;
        }
        yy += 16;
        xx = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
