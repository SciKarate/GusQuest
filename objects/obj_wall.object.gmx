<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dirt</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_walls_corners</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_player)) depth = (obj_player.depth + 1);
if(global.zone == "Kerr") || (global.zone == "Gladstone") {image_index = irandom_range(-1, 8);}
image_speed = 0;
c1timer = 0;
c2timer = 0;
botis = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

with(obj_platform) {{mask_index = spr_platform_mask;}} //make platform 2 pixels thinner

var up = place_meeting(x, y - 1, obj_wall);     //wall 1pixel above (does not see spikes)
var up2 = place_meeting(x, y - 2, obj_wall);    //wall 2pixel above (sees spikes)
var down = place_meeting(x, y + 1, obj_wall);   //wall 1p down
var left = place_meeting(x - 1, y, obj_wall);   //wall 1p left
var right = place_meeting(x + 1, y, obj_wall);  //wall 1p right

var leftc = place_meeting(x - 1, y, obj_wall_corner);   //corner 1p left
var rightc = place_meeting(x + 1, y, obj_wall_corner);  //corner 1p right
var downc = place_meeting(x, y + 1, obj_wall_corner);   //corner 1p down

var diagul = place_meeting(x - 16, y - 16, obj_wall);   //wall 1p up, 1p left
var diagur = place_meeting(x + 16, y - 16, obj_wall);   //wall 1p up, 1p right
var diagdl = place_meeting(x - 16, y + 16, obj_wall);   //wall 1p down, 1p left
var diagdr = place_meeting(x + 16, y + 16, obj_wall);   //wall 1p down, 1p right

var upw = place_meeting(x, y - 1, obj_water); //water 1p up

var screenbot = false;
if(y + 16 &gt; room_height) screenbot = true;  //checks if bottom of screen

//Grassland
if(sprite_index != spr_spikes) &amp;&amp; (global.zone = "Grassy")
{
    sprite_index = spr_dirt;
    //dirt edges
    if(!left) &amp;&amp; (!leftc) draw_sprite_ext(spr_dirt_edge, 0, x, y, 1, 1, 0, c_white, 1);
    if(!right) &amp;&amp; (!rightc) draw_sprite_ext(spr_dirt_edge, 0, x, y, 1, 1, -180, c_white, 1);
    if(!down) &amp;&amp; (!downc) &amp;&amp; (!screenbot) draw_sprite_ext(spr_dirt_edge, 0, x, y, 1, 1, 90, c_white, 1);    
    //corner pixels
    if(up)
    {
        if(!diagul) &amp;&amp; (left || leftc) draw_sprite_ext(spr_dirt_edge_corneru, 0, x, y, 1, 1, 0, c_white, 1);
        if(!diagur) &amp;&amp; (right || rightc) draw_sprite_ext(spr_dirt_edge_corneru, 0, x, y, -1, 1, 0, c_white, 1);
    }
    if(down)
    {
        if(!diagdl) &amp;&amp; (left || leftc) draw_sprite_ext(spr_dirt_edge_cornerd, 0, x, y, 1, 1, 0, c_white, 1);
        if(!diagdr) &amp;&amp; (right || rightc) draw_sprite_ext(spr_dirt_edge_cornerd, 0, x, y, - 1, 1, 0, c_white, 1);
    }
    //grass or top edge
    if(!up2) &amp;&amp; (!upw) draw_sprite_ext(spr_grass_edge, 0, x, y, 1, 1, 0, c_white, 1);
    else if(!up) draw_sprite_ext(spr_dirt_edge, 0, x, y, 1, 1, -90, c_white, 1);
}
//Kerr
else if (sprite_index != spr_spikes) &amp;&amp; (global.zone = "Kerr")
{
    sprite_index = spr_kfurn;
    if screenbot &amp;&amp; botis == 1 sprite_index = spr_kfloor;
    //floor
    if(sprite_index == spr_kfloor)
    {
        if(!left) &amp;&amp; (!leftc) draw_sprite_ext(spr_kfloor_edge, 1, x, y, 1, 1, 0, c_white, 1);
        if(!right) &amp;&amp; (!rightc) draw_sprite_ext(spr_kfloor_edge, 1, x, y, 1, 1, -180, c_white, 1);
    
        if(!up) draw_sprite_ext(spr_kfloor_edge, 0, x, y, 1, 1, -90, c_white, 1);
        else draw_sprite_ext(spr_kfloor_edge, 1, x, y, 1, 1, -90, c_white, 1);
    }
    else
    {
        if(!up) draw_sprite_ext(spr_furn_edge, 0, x, y, 1, 1, -90, c_white, 1);
        if(!left) &amp;&amp; (!leftc) draw_sprite_ext(spr_furn_edge, 0, x, y, 1, 1, 0, c_white, 1);
        if(!right) &amp;&amp; (!rightc) draw_sprite_ext(spr_furn_edge, 0, x, y, 1, 1, -180, c_white, 1);
        if((!down) &amp;&amp; (!downc)) || (y &gt; (room_height - 33)) draw_sprite_ext(spr_furn_edge, 0, x, y, 1, 1, 90, c_white, 1);
    }
}
//Cloud City
else if (sprite_index != spr_spikes) &amp;&amp; (global.zone = "Cloud City")
{
    sprite_index = spr_cfloor;
    //draw edges

    //draw pb
    if  (place_meeting(x, y - 2, obj_itemdad)) ||
        (place_meeting(x, y + 2, obj_itemdad)) ||
        (place_meeting(x - 2, y, obj_itemdad)) ||
        (place_meeting(x + 2, y, obj_itemdad)) {c1timer = 15; c2timer = 15;}
    //draw b
   if (place_meeting(x, y - 2, obj_player)) ||
            (place_meeting(x, y + 2, obj_player)) ||
            (place_meeting(x - 2, y, obj_player)) ||
            (place_meeting(x + 2, y, obj_player)) c1timer = 15;
    //draw p
    if (place_meeting(x, y - 2, obj_enemy)) ||
            (place_meeting(x, y + 2, obj_enemy)) ||
            (place_meeting(x - 2, y, obj_enemy)) ||
            (place_meeting(x + 2, y, obj_enemy))  c2timer = 15;
    
    //execute draws &amp; decrement timers
    if(c1timer &gt; 0){draw_sprite_ext(spr_cfloor_b, 0, x, y, 1, 1, 0, c_white, 1); c1timer -= 1;}
    if(c2timer &gt; 0){draw_sprite_ext(spr_cfloor_p, 0, x, y, 1, 1, 0, c_white, 1); c2timer -= 1;}
}
//Gladstone
else if (sprite_index != spr_spikes) &amp;&amp; (global.zone = "Gladstone")
{
    sprite_index = spr_gwall;
    if screenbot sprite_index = spr_gfloor;
    //floor
    if(sprite_index == spr_gfloor)
    {
        //if(!up) draw_sprite_ext(spr_kfloor_edge, 0, x, y, 1, 1, -90, c_white, 1);
        //else draw_sprite_ext(spr_kfloor_edge, 1, x, y, 1, 1, -90, c_white, 1);
    }
    else
    {
        if(!up) draw_sprite_ext(spr_glad_edge, 0, x, y, 1, 1, -90, c_white, 1);
        if(!left) &amp;&amp; (!leftc) draw_sprite_ext(spr_glad_edge, 0, x, y, 1, 1, 0, c_white, 1);
        if(!right) &amp;&amp; (!rightc) draw_sprite_ext(spr_glad_edge, 0, x, y, 1, 1, -180, c_white, 1);
        if(!down) &amp;&amp; (!downc) &amp;&amp; (!screenbot) draw_sprite_ext(spr_glad_edge, 0, x, y, 1, 1, 90, c_white, 1);
    }
}
with(obj_platform) {{mask_index = selfmask;}}  //reset platform
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
