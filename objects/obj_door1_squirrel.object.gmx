<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door1_closed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>closed = true;
sprite_index = -1;
depth = -2;
doorframe = 0;
doormaxframes = 3;
openspeed = 0.15;
openangle = 0;
opendelay = 0;
if(global.zone = "Grassy")
    {closedsprite = spr_door1_closed;
    opensprite = spr_door1_open;}
if(global.zone = "Kerr")
    {closedsprite = spr_kdoor1_closed;
    opensprite = spr_kdoor1_open;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_squirrel)) closed = true;
else closed = false;

if(closed = false &amp;&amp; opendelay &gt; 0) {opendelay -= 1;}

if(closed = false &amp;&amp; opendelay &lt;= 0)
{
    if(doorframe &gt;= doormaxframes) mask_index = -1;
    if((doorframe &lt; doormaxframes) &amp;&amp; (obj_player.state != states.pickup))
    {
        if(doorframe &lt; 1) &amp;&amp; !(audio_is_playing(snd_stretch))
        {
            audio_sound_pitch(snd_stretch, 1);
            audio_sound_gain(snd_stretch, global.gamevolume, 0);
            audio_play_sound(snd_stretch, 0, 0);
        }
        doorframe += openspeed; //if doorframe &lt; total frames in animation
    }
}
else mask_index = closedsprite;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(closed = true) draw_sprite_ext(closedsprite, 0, x, y, 1, 1, openangle, c_white, 1);
else
{
    draw_sprite_ext(opensprite, doorframe, x, y, 1, 1, openangle, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
